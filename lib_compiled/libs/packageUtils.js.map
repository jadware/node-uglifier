{
  "version": 3,
  "file": "packageUtils.js",
  "sourceRoot": "..\\..",
  "sources": [
    "src\\libs\\packageUtils.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "#\r\n#/*!\r\n# * node-uglifier\r\n# * Copyright (c) 2014 Zsolt Szabo Istvan\r\n# * MIT Licensed\r\n# *\r\n# */\r\n#\r\n\r\nfsExtra = require('fs-extra');\r\nfs = require('fs');\r\nUglifyJS = require('uglify-es')\r\npath = require('path')\r\n_ = require('underscore')\r\n\r\npackageUtils = module.exports\r\n\r\n# Check if `module` is a native module (like `net` or `tty`).\r\npackageUtils.isNative = (module)->\r\n    try\r\n        return require.resolve(module) == module;\r\n    catch err\r\n        return false;\r\n\r\npackageUtils.readFile = (pathAbs, encoding = 'utf8')->\r\n    options = {encoding}\r\n    return fs.readFileSync(pathAbs, options)\r\n\r\npackageUtils.getAst = (code)->\r\n    return UglifyJS.parse(code)\r\n\r\n#absolulte file path\r\npackageUtils.getMatchingFiles = (rootPath, dirAndFileArray)->\r\n    r = []\r\n\r\n    rootDir = if fs.lstatSync(rootPath).isDirectory() then path.resolve(rootPath) else path.dirname(path.resolve(rootPath))\r\n    for dirOrFile in dirAndFileArray\r\n        destination = path.resolve(rootDir, dirOrFile)\r\n        try\r\n            filestats = fs.lstatSync(destination)\r\n        catch me\r\n#probably missing extension, file not found\r\n            filestats = null\r\n        if filestats and filestats.isDirectory()\r\n#we have directory\r\n            fs.readdirSync(destination).reduce(((prev, curr)-> prev.push(path.join(destination, curr));return prev), r)\r\n        else\r\n            if path.extname(destination) == \"\"\r\n                fileName = path.basename(destination)\r\n                fs.readdirSync(path.dirname(destination)).filter((fileNameLoc)-> fileNameLoc.indexOf(fileName) != -1).reduce(((prev, curr)-> prev.push(path.join(destination,\r\n                    curr)); return prev), r)\r\n            else\r\n                r.push(destination)\r\n    return r\r\n\r\n\r\npackageUtils.getIfNonNativeNotFilteredNonNpm = (fileAbs, filters, possibleExtensions)->\r\n#if path can be resolved and it is file than it is non native, non npm\r\n    r = null\r\n    if path.extname(fileAbs) == \"\"\r\n        existingExtensions = possibleExtensions.filter((ext)->return fs.existsSync(fileAbs + \".\" + ext))\r\n        if existingExtensions.length > 1 then throw new Error(\" multiple matching extensions problem for \" + fileAbs)\r\n        r = if existingExtensions.length == 1 then fileAbs + \".\" + existingExtensions[0] else null\r\n    else\r\n        r = if fs.existsSync(fileAbs) then fileAbs else null\r\n    if r\r\n        if filters.filter((fFile)->return path.normalize(fFile) == path.normalize(r)).length > 0\r\n            r = null;\r\n            console.log(fileAbs + \" was filtered \")\r\n\r\n    return r\r\n\r\n\r\npackageUtils.walkExpressions=(astNode,parentNode,depth)->\r\n        if depth>5 then return null\r\n        if astNode.name==\"require\"\r\n            return parentNode?.args || astNode.args\r\n        else if astNode.expression?\r\n            return packageUtils.walkExpressions(astNode.expression,astNode,depth+1)\r\n\r\n\r\n\r\n\r\n#assume no directory is native module\r\n#returns the file path of modules if file exists\r\n#if no extension specified first existing possibleExtensions is used\r\npackageUtils.getRequireStatements = (ast, file, possibleExtensions = [\"js\", \"coffee\"], packNodeModules = false)->\r\n    r = []\r\n    fileDir = path.dirname(file)\r\n\r\n    handleRequireNode = (text, args)->\r\n\r\n        pathOfModuleRaw = args[0].value\r\n\r\n        if !pathOfModuleRaw? then   throw new Error(\"probably dynamic\")\r\n\r\n        #has / or \\ in the string\r\n        hasPathInIt = (!_.isEmpty(pathOfModuleRaw.match(\"/\")) || !_.isEmpty(pathOfModuleRaw.match(/\\\\/)))\r\n\r\n        if hasPathInIt\r\n            #it is not a module, do nothing\r\n        else if packNodeModules\r\n            #find node_module directory, than main in package json if no index.js found\r\n            pathOfModuleRaw=require.resolve(pathOfModuleRaw)\r\n        else\r\n            #it is module and not packed\r\n            return false\r\n\r\n        pathOfModuleLoc = path.resolve(fileDir, pathOfModuleRaw)\r\n        try\r\n            pathOfModuleLocStats =fs.lstatSync(pathOfModuleLoc)\r\n        catch me;\r\n\r\n        if (pathOfModuleLocStats and pathOfModuleLocStats.isDirectory())\r\n            pathOfModuleLoc=path.resolve(pathOfModuleLoc, \"index\")\r\n\r\n\r\n        #if path can be resolved and it is file than it is non native, non npm\r\n        pathOfModule = packageUtils.getIfNonNativeNotFilteredNonNpm(pathOfModuleLoc, [], possibleExtensions)\r\n\r\n\r\n        rs = {text, path: pathOfModule}\r\n        if  pathOfModule\r\n            r.push(rs)\r\n\r\n\r\n\r\n\r\n\r\n    ast.walk(new UglifyJS.TreeWalker(\r\n            (node)->\r\n                if (node instanceof UglifyJS.AST_Call) && (node.start.value == 'require' || (node.start.value == 'new' and node.expression.print_to_string() == \"require\"))\r\n                    text = node.print_to_string({beautify: false})\r\n                    #        console.log(text)\r\n                    #expression argument takes precedence over the first argument of require\r\n                    requireArgs = node?.expression?.args\r\n\r\n                    walkedArgs=packageUtils.walkExpressions(node,null,1)\r\n\r\n\r\n                    if _.isEmpty(requireArgs)\r\n                        requireArgs = node.args\r\n                    try\r\n#                        if args.length != 1 then\r\n#                        throw new Error (\"in file: \" + file + \" require supposed to have 1 argument: \" + text)\r\n                        if  requireArgs.length != 1 or !handleRequireNode(text, requireArgs) and !_.isEmpty(walkedArgs)\r\n                            text2=\"require('#{walkedArgs[0].value}')\"\r\n                            handleRequireNode(text2, walkedArgs)\r\n\r\n                    catch me\r\n                        console.log(\"Warning!:\")\r\n                        console.log(\"unhandled require type in file: \" + file + \" the problematic statement: \" + text + \" probably something fancy going on! \" + \" the error: \" + me.message)\r\n                    return true\r\n                else if  (node instanceof UglifyJS.AST_Call) && (node.start.value == 'new' and node.expression.start.value == \"(\" and node.expression.print_to_string().indexOf(\"require\") != -1)\r\n                    args = node.expression.args\r\n                    text = \"require\" + \"('\" + args[0].value + \"')\"\r\n                    #        console.log(text)\r\n\r\n                    handleRequireNode(text, args)\r\n                    console.log(\"second \" + text)\r\n                    return true\r\n                else\r\n                    return\r\n        )\r\n    )\r\n    return r\r\n\r\n\r\nstrEscapeMap = {\r\n    '\\b': '\\\\b',\r\n    '\\f': '\\\\f',\r\n    '\\n': '\\\\n',\r\n    '\\r': '\\\\r',\r\n    '\\t': '\\\\t',\r\n};\r\n\r\npackageUtils.hexifyString = (str)->\r\n    r = \"\"\r\n    if !str.length > 0 then return r\r\n    for i in [0..str.length - 1]\r\n        char = str[i];\r\n        if (strEscapeMap[char])\r\n            r += r[char];\r\n        else if ('\\\\' == char)\r\n            r += '\\\\' + str[++i]\r\n        else\r\n            r += '\\\\x' + str.charCodeAt(i).toString(16);\r\n    return r;\r\n\r\npackageUtils.deHexifyString = (str)->\r\n    return str.toString()\r\n\r\n\r\npackageUtils.getSourceHexified = (ast)->\r\n    hexify = (node)->\r\n        if (node instanceof UglifyJS.AST_String)\r\n            text = node.getValue()\r\n            hex = packageUtils.hexifyString(text);\r\n            obj = _.extend({}, node);\r\n            obj.value = hex\r\n            return new UglifyJS.AST_String(obj);\r\n        else\r\n            return\r\n\r\n    transformer = new UglifyJS.TreeTransformer(null, hexify);\r\n    stream = new UglifyJS.OutputStream;\r\n    stream.print_string = (str)->\r\n        return this.print('\"' + str + '\"')\r\n\r\n    ast = ast.transform(transformer);\r\n    ast.print(stream);\r\n\r\n    return stream.toString()\r\n\r\n\r\n#packageUtils.replaceAll=(find, replace, str)->\r\n#    return str.replace(new RegExp(find, 'g'), replace);\r\n\r\n\r\n\r\n\r\npackageUtils.replaceRequireStatement = (textIn, orig, replacement)->\r\n    text = textIn\r\n    isReplaced = false\r\n    text = text.replace(orig, (token)-> (isReplaced = true;return replacement))\r\n    if !isReplaced\r\n        withTheOtherQuotation = orig\r\n        if withTheOtherQuotation.indexOf(\"'\") != -1\r\n            withTheOtherQuotation = withTheOtherQuotation.replace(/[']/ig, '\"')\r\n        else\r\n            withTheOtherQuotation = withTheOtherQuotation.replace(/[\"]/ig, \"'\")\r\n        text = text.replace(withTheOtherQuotation, (token)-> (isReplaced = true;return replacement))\r\n    if !isReplaced\r\n        throw new Error(orig + \" was not replaced with \" + replacement)\r\n    return text\r\n\r\n\r\npackageUtils.countWords = (sentence)->\r\n    index = {}\r\n    words = sentence\r\n    .replace(/[.,?!;()\"'-]/g, \" \")\r\n    .replace(/\\s+/g, \" \")\r\n    .toLowerCase()\r\n    .split(\" \");\r\n\r\n    words.forEach((word)->\r\n        if (!(index.hasOwnProperty(word)))\r\n            index[word] = 0;\r\n        index[word]++;\r\n    )\r\n    return index\r\n\r\n\r\n#        console.log([text,path.resolve(fileDir,pathOfModule),packageUtils.isNative(pathOfModule)].join(\" | \"))\r\n\r\n#print_to_string({ beautify: false }).replace(/-/g, \"_\")   AST_Assign node.left,right\r\n# return true; no descend\r\n"
  ]
}