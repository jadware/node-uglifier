{
  "version": 3,
  "file": "unitTest.js",
  "sourceRoot": "..\\..",
  "sources": [
    "src\\test\\unitTest.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "fs = require('fs');\r\nfsExtra = require('fs-extra');\r\nNodeUglifier=require(\"../NodeUglifier\")\r\npackageUtils=require('../libs/packageUtils')\r\npath = require('path')\r\ndomain = require('domain');\r\n#_=require(\"\\x6e\\x64\\x65\\x72\\x73\\x63\\x6f\\x72\\x65\\x6e\")\r\n\r\n\r\nIS_RE_CREATE_TEST_FILES=true\r\nSEPARATOR=path.sep\r\n\r\n\r\n#exports.testExpressWithModulesPackedToo=(test)->\r\n#\r\n#    testFile=\"lib_compiled/test/resultFiles/express.js\"\r\n#\r\n#    nodeUglifier=new NodeUglifier(\"lib_compiled/test/express/server.js\",{packNodeModules:true})\r\n#    mergedSource=nodeUglifier.merge().uglify().toString()\r\n#\r\n#    try\r\n#        eval(mergedSource)\r\n#    catch me\r\n#        test.fail(me.toString(),\"expected no error thrown from combined project\")\r\n#\r\n#\r\n#    if IS_RE_CREATE_TEST_FILES then nodeUglifier.exportToFile(testFile)\r\n#    else\r\n#        test.equals(packageUtils.readFile(testFile).toString(),mergedSource)\r\n#\r\n#    test.done()\r\nFunction.prototype.withDomain = (withStack)->\r\n    fn = this;\r\n    return (test)->\r\n        d = domain.create();\r\n        d.on('error', (e)->\r\n            test.fail('test failed with ' + e.message);\r\n            if(withStack)\r\n                console.error(e.stack)\r\n            test.done();\r\n        )\r\n        d.run(fn.bind(this, test));\r\n\r\n\r\ntestCycleDetection=(test)->\r\n    testFile=\"lib_compiled/test/resultFiles/testCycleDetection.js\"\r\n\r\n    try\r\n        nodeUglifier=new NodeUglifier(\"lib_compiled/test/testCycleDetection/main.js\",{rngSeed:\"hello\"})\r\n        mergedSource=nodeUglifier.merge().uglify().toString()\r\n        eval(mergedSource)\r\n    catch me\r\n        expectedFirstLine='There has been 2 cycles in the dependency tree:'\r\n        got=me.message[0..expectedFirstLine.length-1]\r\n        if got!=expectedFirstLine\r\n            throw me\r\n            test.fail(me.toString(),\"expected no error thrown from combined project\")\r\n\r\n\r\n\r\n    if IS_RE_CREATE_TEST_FILES then nodeUglifier.exportToFile(testFile)\r\n    else\r\n        test.equals(packageUtils.readFile(testFile).toString(),mergedSource)\r\n    test.done()\r\nexports.testCycleDetection=testCycleDetection\r\n\r\nexports.testExpress=(test)->\r\n\r\n    testFile=\"lib_compiled/test/resultFiles/express.js\"\r\n\r\n    nodeUglifier=new NodeUglifier(\"lib_compiled/test/express/server.js\",{rngSeed:\"hello\"})\r\n    mergedSource=nodeUglifier.merge().uglify().toString()\r\n\r\n    try\r\n        eval(mergedSource)\r\n    catch me\r\n        test.fail(me.toString(),\"expected no error thrown from combined project\")\r\n\r\n\r\n    if IS_RE_CREATE_TEST_FILES then nodeUglifier.exportToFile(testFile)\r\n    else\r\n        test.equals(packageUtils.readFile(testFile).toString(),mergedSource)\r\n\r\n    test.done()\r\n\r\n\r\nexports.directoryImportTest=(test)->\r\n\r\n    testFile=\"lib_compiled/test/resultFiles/directoryImportTest.js\"\r\n\r\n    nodeUglifier=new NodeUglifier(\"lib_compiled/test/testDirectoryImport/main.js\",{rngSeed:\"hello\"})\r\n    mergedSource=nodeUglifier.merge().toString()\r\n\r\n    try\r\n        eval(mergedSource)\r\n    catch me\r\n        test.fail(me.toString(),\"expected no error thrown from combined project\")\r\n\r\n\r\n    if IS_RE_CREATE_TEST_FILES then nodeUglifier.exportToFile(testFile)\r\n    else\r\n        test.equals(packageUtils.readFile(testFile).toString(),mergedSource)\r\n\r\n    test.done()\r\n\r\nexports.testMergeWithBothExportFilterTypes=(test)->\r\n\r\n  testFile=\"lib_compiled/test/resultFiles/simpleMergeWithBothExportFilterTypes.js\"\r\n\r\n  nodeUglifier=new NodeUglifier(\"lib_compiled/test/testproject/main.js\",{rngSeed:\"hello\",mergeFileFilterWithExport:[\"./lib_static/test/\",\"./depa/constants.js\"],mergeFileFilter:[\"./depDynamic/filename_used_in_dynamic_require.js\"]})\r\n  mergedSource=nodeUglifier.merge().toString()\r\n  nodeUglifier.exportToFile(testFile)\r\n  #dont test equality, heavily coffeescript version dependent due to comments not removed\r\n  #  test.equals(packageUtils.readFile(testFile).toString(),mergedSource)\r\n\r\n  try\r\n    GLOBAL._loadDynamic=true\r\n    #if main runs without error OK\r\n    main=require(path.resolve(testFile));\r\n  catch me\r\n    test.fail(\"result file should run without throwing errors\")\r\n\r\n\r\n  GLOBAL._loadDynamic=false\r\n  #if main runs without error OK\r\n  main=require(path.resolve(testFile));\r\n\r\n\r\n  test.done()\r\n\r\nexports.testJsonImport=(test)->\r\n\r\n  testFile=\"lib_compiled/test/resultFiles/testJsonImport.js\"\r\n\r\n  nodeUglifier=new NodeUglifier(\"lib_compiled/test/testJsonImport/main.js\",{rngSeed:\"hello\"})\r\n  mergedSource=nodeUglifier.merge().toString()\r\n\r\n  try\r\n    eval(mergedSource)\r\n  catch me\r\n    test.fail(me.toString(),\"expected no error thrown from combined project\")\r\n\r\n  if IS_RE_CREATE_TEST_FILES then nodeUglifier.exportToFile(testFile)\r\n  else\r\n    test.equals(packageUtils.readFile(testFile).toString(),mergedSource)\r\n\r\n  test.done()\r\n\r\n\r\n\r\n\r\nexports.testEs6=(test)->\r\n\r\n    testFile=\"lib_compiled/test/resultFiles/es6proj.js\"\r\n\r\n    nodeUglifier=new NodeUglifier(\"lib_compiled/test/es6proj/main.js\",{rngSeed:\"hello\"})\r\n    mergedSource=nodeUglifier.merge().uglify().toString()\r\n\r\n    try\r\n        eval(mergedSource)\r\n    catch me\r\n        test.fail(me.toString(),\"expected no error thrown from combined project\")\r\n\r\n\r\n    if IS_RE_CREATE_TEST_FILES then nodeUglifier.exportToFile(testFile)\r\n    else\r\n        test.equals(packageUtils.readFile(testFile).toString(),mergedSource)\r\n\r\n    test.done()\r\n\r\n\r\n\r\nexports.testStuff=(test)->\r\n  t0=\"./test/test2\"\r\n  t0_2=\"onderscore\"\r\n  t1=packageUtils.hexifyString(t0_2)\r\n  console.log(t1)\r\n  console.log(\"\\n\")\r\n  test.done()\r\n\r\nrelativeToDir=(dir)->\r\n    path.relative(__dirname,dir)\r\n\r\n\r\n\r\nexports.testPackageUtils=(test)->\r\n  test.deepEqual(packageUtils.getMatchingFiles(\"lib_compiled/test/testproject/main.js\",[]),[])\r\n\r\n  shouldBeResult1=[ \"testproject#{SEPARATOR}depa#{SEPARATOR}constants.js\",\r\n                    \"testproject#{SEPARATOR}depa#{SEPARATOR}constants.js.map\" ]\r\n  #  console.log(packageUtils.getMatchingFiles(\"lib_compiled/test/testproject/main.js\",[\"./depa/\"])) #[\"main\",\"./depa/\",\"./depb/cryptoLoc.js\",\"./depb/depDeep/deepModule\"]\r\n  test.deepEqual(packageUtils.getMatchingFiles(\"lib_compiled/test/testproject/\",[\"./depa/\"]).map(relativeToDir),shouldBeResult1)\r\n  test.deepEqual(packageUtils.getMatchingFiles(\"lib_compiled/test/testproject\",[\"./depa/\"]).map(relativeToDir),shouldBeResult1)\r\n  test.deepEqual(packageUtils.getMatchingFiles(\"lib_compiled/test/testproject/main.js\",[\"./depa/\"]).map(relativeToDir),shouldBeResult1)\r\n\r\n  shouldBeResult2=[ \"testproject#{SEPARATOR}main#{SEPARATOR}main.js\",\r\n                    \"testproject#{SEPARATOR}main#{SEPARATOR}main.js.map\",\r\n                    \"testproject#{SEPARATOR}depb#{SEPARATOR}cryptoLoc.js\",\r\n                    \"testproject#{SEPARATOR}depb#{SEPARATOR}depDeep#{SEPARATOR}deepModule#{SEPARATOR}deepModule.js\",\r\n                    \"testproject#{SEPARATOR}depb#{SEPARATOR}depDeep#{SEPARATOR}deepModule#{SEPARATOR}deepModule.js.map\" ]\r\n\r\n#  console.log(packageUtils.getMatchingFiles(\"lib_compiled/test/testproject/main.js\",[\"main\",\"./depb/cryptoLoc.js\",\"./depb/depDeep/deepModule\"]))\r\n  test.deepEqual(packageUtils.getMatchingFiles(\"lib_compiled/test/testproject/main.js\",[\"main\",\"./depb/cryptoLoc.js\",\"./depb/depDeep/deepModule\"]).map(relativeToDir),shouldBeResult2)\r\n\r\n  test.done()\r\n\r\nexports.testDependenciesExport=(test)->\r\n  exportDir=\"lib_test_project_export/\"\r\n  nodeUglifier=new NodeUglifier(\"lib_compiled/test/testproject/main.js\",{rngSeed:\"hello\"})\r\n  nodeUglifier.exportDependencies(exportDir,{\"coffee\":{\"src\":\"lib_compiled\"}})\r\n  test.ok(fsExtra.existsSync(path.resolve(exportDir)))\r\n  test.ok(fsExtra.existsSync(path.resolve(exportDir + \"/src\")))\r\n  test.ok(fsExtra.existsSync(path.resolve(exportDir + \"/lib_compiled\")))\r\n  try\r\n    constantsAfterSeparation=require(path.resolve(exportDir) + \"/lib_compiled/test/testproject/depa/constants.js\")\r\n  catch me\r\n    test.fail(\"the new constants file should be proper requireable js\")\r\n  test.done()\r\n\r\n\r\ntestMerge=(test)->\r\n\r\n  testFile=\"lib_compiled/test/resultFiles/simpleMerge.js\"\r\n\r\n  nodeUglifier=new NodeUglifier(\"lib_compiled/test/testproject/main.js\",{rngSeed:\"hello\"})\r\n  mergedSource=nodeUglifier.merge().toString()\r\n\r\n  try\r\n    eval(mergedSource)\r\n  catch me\r\n    test.fail(me.toString(),\"expected no error thrown from combined project\")\r\n\r\n  nodeUglifier.exportToFile(testFile)\r\n\r\n\r\n\r\n  #dont test equality, heavily coffeescript version dependent due to comments not removed\r\n  #  test.equals(packageUtils.readFile(testFile).toString(),mergedSource)\r\n\r\n  test.done()\r\n\r\n\r\n\r\nexports.testMergeWithExportFilter=(test)->\r\n\r\n  testFile=\"lib_compiled/test/resultFiles/simpleMergeWithFilter.js\"\r\n\r\n  nodeUglifier=new NodeUglifier(\"lib_compiled/test/testproject/main.js\",{rngSeed:\"hello\",mergeFileFilterWithExport:[\"./lib_static/test/\",\"./depa/constants.js\"]})\r\n  mergedSource=nodeUglifier.merge().toString()\r\n  nodeUglifier.exportToFile(testFile)\r\n  #dont test equality, heavily coffeescript version dependent due to comments not removed\r\n#  test.equals(packageUtils.readFile(testFile).toString(),mergedSource)\r\n\r\n  try\r\n    GLOBAL._loadDynamic=false\r\n    #if main runs without error OK\r\n    main=require(path.resolve(testFile));\r\n  catch me\r\n    test.fail(\"result file should run without throwing errors\")\r\n\r\n\r\n\r\n  GLOBAL._loadDynamic=false\r\n  #if main runs without error OK\r\n  main=require(path.resolve(testFile));\r\n\r\n\r\n  test.done()\r\n\r\n\r\n\r\n\r\nexports.testMergeWithFilterAndUglify=(test)->\r\n\r\n  testFile=\"lib_compiled/test/resultFiles/simpleMergeWithFilterAndUglify.js\"\r\n  uglifySourceMap=\"lib_compiled/test/resultFiles/sourcemaps/simpleMergeWithFilterAndUglify.js\"\r\n\r\n  nodeUglifier=new NodeUglifier(\"lib_compiled/test/testproject/main.js\",{rngSeed:\"hello\",mergeFileFilterWithExport:[\"./lib_static/test/\",\"./depa/constants.js\"]})\r\n  mergedSource=nodeUglifier.merge().uglify().toString()\r\n\r\n  if IS_RE_CREATE_TEST_FILES then   nodeUglifier.exportToFile(testFile)\r\n  else\r\n    test.equals(packageUtils.readFile(testFile).toString(),mergedSource)\r\n\r\n  nodeUglifier.exportSourceMaps(uglifySourceMap)\r\n\r\n\r\n  try\r\n    GLOBAL._loadDynamic=false\r\n    #if main runs without error OK\r\n    main=require(path.resolve(testFile));\r\n  catch me\r\n    test.fail(\"result file should run without throwing errors\")\r\n\r\n  test.done()\r\n\r\n\r\nexports.testMergeWithFilterAndUglifyAndStrProtection=(test)->\r\n\r\n  testFile=\"lib_compiled/test/resultFiles/simpleMergeWithFilterAndUglifyAndStrProtection.js\"\r\n  uglifySourceMap=\"lib_compiled/test/resultFiles/sourcemaps/simpleMergeWithFilterAndUglifyAndStrProtection.js\"\r\n\r\n  nodeUglifier=new NodeUglifier(\"lib_compiled/test/testproject/main.js\",{rngSeed:\"hello\",mergeFileFilterWithExport:[\"./lib_static/test/\",\"./depa/constants.js\"]})\r\n  mergedSource=nodeUglifier.merge().uglify({strProtectionLvl:1}).toString()\r\n\r\n  if IS_RE_CREATE_TEST_FILES then nodeUglifier.exportToFile(testFile)\r\n  else\r\n    nodeUglifier.exportSourceMaps(uglifySourceMap)\r\n\r\n  try\r\n    GLOBAL._loadDynamic=false\r\n    #if main runs without error OK\r\n    main=require(path.resolve(testFile));\r\n  catch me\r\n    test.fail(\"result file should run without throwing errors\")\r\n\r\n#  try\r\n#    eval(mergedSource)\r\n#  catch me\r\n#    test.fail(me.toString(),\"expected no error thrown from combined project\")\r\n\r\n  test.equals(packageUtils.readFile(testFile).toString(),mergedSource)\r\n\r\n  test.done()\r\n\r\n\r\n\r\n\r\n"
  ]
}